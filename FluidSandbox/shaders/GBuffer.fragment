uniform sampler2D albedo;
uniform samplerCube albedo_cube;
uniform float textureValue;
uniform float materialValue;
varying vec3 vertex;
varying vec3 position;
varying vec3 normal;
varying vec3 color;
//varying vec3 tangent;
//varying vec3 binormal;
void main() {
	gl_FragData[0] = vec4(position, materialValue);
	// Transform to rgb normal
	//gl_FragData[1] = vec4(0.5 * (normalize(normal) + 1.0), 1.0);
	gl_FragData[1] = vec4(normal, 1.0);
	if (textureValue < 1.0) {
		gl_FragData[2] = vec4(color, 1.0);
	} else {
		vec4 texColor = vec4(1.0);
		if (textureValue > 0.0 && textureValue <= 1.0) {
			texColor = texture2D(albedo, gl_TexCoord[0].xy);
		} else if (textureValue > 1.0 && textureValue <= 2.0) {
			texColor = textureCube(albedo_cube, vec3(-vertex.x, -vertex.y, vertex.z));
		} 
		gl_FragData[2] = vec4(color, 1.0) * texColor;
	}
}