uniform sampler2D depthTex;
uniform vec2 scale;
uniform float radius;
uniform float minDepth;
const float blurDepthFalloff = 2.0;
void main(void)
{
	float depth = texture2D(depthTex, gl_TexCoord[0].xy).x;
	if (depth < minDepth) {
		gl_FragColor = vec4(depth,depth,depth,0.0);
		return;
	}
	float blurScale = 2.0 / radius;
	float sum = 0.0;
	float wsum = 0.0;
	for(float x=-radius; x<=radius; x+=1.0) {
		float cur = texture2D(depthTex, gl_TexCoord[0].xy + x * scale).x;
		
		// range domain
		float r2 = (depth - cur) * blurDepthFalloff;
		float g = exp(-r2*r2);

		// spatial domain
		float r = x * blurScale;
		float w = exp(-r*r);

		sum += cur * w * g;
		wsum += w * g;
	}
	if (wsum > 0.0) {
		sum /= wsum;
	}
	gl_FragColor = vec4(sum,sum,sum,1.0);
}
