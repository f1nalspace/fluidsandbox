uniform float near;
uniform float far;
uniform mat4 projMat;
varying vec3 posEye;
varying float radius;
void main(void) {

    // Calculate normal from texture coordinates
	vec3 N;
	N.xy = gl_TexCoord[0].xy*vec2(2.0, -2.0) + vec2(-1.0, 1.0);
	float mag = dot(N.xy, N.xy);
	if (mag > 1.0) discard; // kill pixels outside circle
	N.z = sqrt(1.0-mag);
	
	// Point on surface of sphere in eye space
	vec4 spherePosEye = vec4(posEye+N*radius, 1.0);
	
	// Calculate depth from sphere eye space
	vec4 clipSpacePos = projMat * spherePosEye;
	
	// Normal depth
	float normDepth = (clipSpacePos.z / clipSpacePos.w)*0.5+0.5;

	// Output
	gl_FragDepth = normDepth;
	gl_FragColor = vec4(normDepth, normDepth, normDepth, 1.0);
}

